Symbol table level 0
 93986619073184        real  BASIC  basicdt   1          siz     8
 93986619073280     integer  BASIC  basicdt   0          siz     4
 93986619073376        char  BASIC  basicdt   2          siz     1
 93986619073472     boolean  BASIC  basicdt   3          siz     4
 93986619073568         exp  knd 5 0  typ 93986619073664  lvl  0  siz     0  off     0
(FUNCTION real
          real)
 93986619073856       trexp  knd 5 0  typ 93986619073952  lvl  0  siz     0  off     0
(FUNCTION real
          real)
 93986619074144         sin  knd 5 0  typ 93986619074240  lvl  0  siz     0  off     0
(FUNCTION real
          real)
 93986619074432         cos  knd 5 0  typ 93986619074528  lvl  0  siz     0  off     0
(FUNCTION real
          real)
 93986619074720       trsin  knd 5 0  typ 93986619074816  lvl  0  siz     0  off     0
(FUNCTION real
          real)
 93986619075008        sqrt  knd 5 0  typ 93986619075104  lvl  0  siz     0  off     0
(FUNCTION real
          real)
 93986619075296       round  knd 5 0  typ 93986619075392  lvl  0  siz     0  off     0
(FUNCTION real
          real)
 93986619075584      iround  knd 5 0  typ 93986619075680  lvl  0  siz     0  off     0
(FUNCTION integer
          real)
 93986619075872         ord  knd 5 0  typ 93986619075968  lvl  0  siz     0  off     0
(FUNCTION integer
          integer)
 93986619076160         new  knd 5 0  typ 93986619076256  lvl  0  siz     0  off     0
(FUNCTION integer
          integer)
 93986619076448       trnew  knd 5 0  typ 93986619076544  lvl  0  siz     0  off     0
(FUNCTION integer
          integer)
 93986619076736       write  knd 5 0  typ 93986619076832  lvl  0  siz     0  off     0
(FUNCTION NULL
          char)
 93986619077024     writeln  knd 5 0  typ 93986619077120  lvl  0  siz     0  off     0
(FUNCTION NULL
          char)
 93986619077312      writef  knd 5 0  typ 93986619077408  lvl  0  siz     0  off     0
(FUNCTION NULL
          real)
 93986619077600    writelnf  knd 5 0  typ 93986619077696  lvl  0  siz     0  off     0
(FUNCTION NULL
          real)
 93986619077888      writei  knd 5 0  typ 93986619077984  lvl  0  siz     0  off     0
(FUNCTION NULL
          integer)
 93986619078176    writelni  knd 5 0  typ 93986619078272  lvl  0  siz     0  off     0
(FUNCTION NULL
          integer)
 93986619078464        read  knd 5 0  typ 93986619078560  lvl  0  siz     0  off     0
(FUNCTION NULL
          NULL)
 93986619078752      readln  knd 5 0  typ 93986619078848  lvl  0  siz     0  off     0
(FUNCTION NULL
          NULL)
 93986619079040         eof  knd 5 0  typ 93986619079136  lvl  0  siz     0  off     0
(FUNCTION boolean
          NULL)
Symbol table level 1
 93986619104880           i  VAR    0 typ integer  lvl  1  siz     4  off     0
 93986619104976         sum  VAR    0 typ integer  lvl  1  siz     4  off     4
yyparse result =        0
(program graph1 (progn output)
                (progn (:= i (+ i 1))
                       (:= sum (+ sum 1))
                       (:= i (+ i sum))))
# ---------------- Beginning of Generated Code --------------------
        .file   "foo"
        .text
        .globl graph1
        .type   graph1, @function
graph1:
.LFB0:
	.cfi_startproc
	pushq	%rbp              # save base pointer on stack
	.cfi_def_cfa_offset 16
	movq	%rsp, %rbp        # move stack pointer to base pointer
	.cfi_offset 6, -16
	.cfi_def_cfa_register 6
        subq	$32, %rsp 	  # make space for this stack frame
	movq	%rbx, %r9        # save %rbx (callee-saved) in %r9
# ------------------------- begin Your code -----------------------------
	movl	-32(%rbp),%eax     	#  i -> %eax
	movl	$1,%ecx         	#  1 -> %ecx
	movl	%ecx,%eax         	#  %ecx -> %eax
	movl	%eax,-32(%rbp)     	#  %eax -> i
	movl	-28(%rbp),%ecx     	#  sum -> %ecx
	movl	$1,%edx         	#  1 -> %edx
	movl	%edx,%ecx         	#  %edx -> %ecx
	movl	%ecx,-28(%rbp)     	#  %ecx -> sum
	movl	-32(%rbp),%edx     	#  i -> %edx
	movl	-28(%rbp),%ebx     	#  sum -> %ebx
	movl	%ebx,%edx         	#  %ebx -> %edx
	movl	%edx,-32(%rbp)     	#  %edx -> i
# ----------------------- begin Epilogue code ---------------------------
	movq	%r9, %rbx        # restore %rbx (callee-saved) from %r9
        leave
        ret
        .cfi_endproc
.LFE0:
        .size   graph1, .-graph1
# ----------------- end Epilogue; Literal data follows ------------------
        .section        .rodata

        .ident  "CS 375 Compiler - Spring 2022"
